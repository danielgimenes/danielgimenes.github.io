<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2017-03-31T13:16:54-03:00</updated><id>http://localhost:4000/blog/</id><title type="html">dgimenes technical blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">WalkRun v1.1</title><link href="http://localhost:4000/blog/2016/06/05/walkrun-v1-1.html" rel="alternate" type="text/html" title="WalkRun v1.1" /><published>2016-06-05T20:00:53-03:00</published><updated>2016-06-05T20:00:53-03:00</updated><id>http://localhost:4000/blog/2016/06/05/walkrun-v1-1</id><content type="html" xml:base="http://localhost:4000/blog/2016/06/05/walkrun-v1-1.html">&lt;p&gt;New version of WalkRun! The app now speaks the name of the training step when it starts. The user can choose a combination of vibrate and speak so he never misses the right moment to start running/walking.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/blog/assets/screenshot_1-1-169x300.png&quot; alt=&quot;screenshot_1&quot; width=&quot;169&quot; height=&quot;300&quot; class=&quot;size-medium wp-image-556&quot; /&gt;&amp;nbsp;&lt;img src=&quot;/blog/assets/screenshot_4-169x300.png&quot; alt=&quot;screenshot_4&quot; width=&quot;169&quot; height=&quot;300&quot; class=&quot;size-medium wp-image-557&quot; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Check it out at &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.dgimenes.walkrun&lt;br /&gt;
&quot;&gt;https://play.google.com/store/apps/details?id=br.com.dgimenes.walkrun&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><category term="Android" /><summary type="html">New version of WalkRun! The app now speaks the name of the training step when it starts. The user can choose a combination of vibrate and speak so he never misses the right moment to start running/walking. &amp;nbsp; Check it out at &quot;&gt;https://play.google.com/store/apps/details?id=br.com.dgimenes.walkrun</summary></entry><entry><title type="html">Clickr Metronome</title><link href="http://localhost:4000/blog/2016/06/03/clickr-metronome.html" rel="alternate" type="text/html" title="Clickr Metronome" /><published>2016-06-03T20:00:35-03:00</published><updated>2016-06-03T20:00:35-03:00</updated><id>http://localhost:4000/blog/2016/06/03/clickr-metronome</id><content type="html" xml:base="http://localhost:4000/blog/2016/06/03/clickr-metronome.html">&lt;p&gt;A handy metronome with the option of having “presets” for your favourite songs or trainings!&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;/blog/assets/app_icon_highres-1-300x300.png&quot; alt=&quot;app_icon_highres&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;&lt;/p&gt;
&lt;p&gt;With Clickr you can:&lt;/p&gt;
&lt;p&gt;- Easily configure tempo and change it during practice&lt;br /&gt;
- Supports simple, compound and complex time signatures 4/4, 2/4, 3/4, 5/4, 7/8, 9/8, 11/8 and 12/8&lt;br /&gt;
- Pick a custom duration for your training or set it to unlimited&lt;br /&gt;
- Save tempo, time signature and duration in presets that can be used later&lt;br /&gt;
- Change tempo during the training (no need to stop and start over)&lt;br /&gt;
- Configure volume of the metronome with on-screen button (no need to use smartphone buttons)&lt;br /&gt;
- Have your first beat of a compass as a higher pitch sound&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img class=&quot;alignnone size-medium wp-image-580&quot; src=&quot;/blog/assets/screenshot_1-2-169x300.png&quot; alt=&quot;&quot; width=&quot;169&quot; height=&quot;300&quot; /&gt; &lt;img class=&quot;alignnone size-medium wp-image-582&quot; src=&quot;/blog/assets/screenshot_3-169x300.png&quot; alt=&quot;&quot; width=&quot;169&quot; height=&quot;300&quot; /&gt;&lt;br /&gt;
&lt;/center&gt;The app is currently monetised through ads, and a PRO version bought through in-app purchase, which enables having more than 3 presets at a time, removes the ads and allows training with complex and compound time signatures.&lt;/p&gt;
&lt;p&gt;Check it out at &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.dgimenes.metronomepractice&quot;&gt;https://play.google.com/store/apps/details?id=br.com.dgimenes.metronomepractice&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><summary type="html">A handy metronome with the option of having “presets” for your favourite songs or trainings! With Clickr you can: - Easily configure tempo and change it during practice - Supports simple, compound and complex time signatures 4/4, 2/4, 3/4, 5/4, 7/8, 9/8, 11/8 and 12/8 - Pick a custom duration for your training or set it to unlimited - Save tempo, time signature and duration in presets that can be used later - Change tempo during the training (no need to stop and start over) - Configure volume of the metronome with on-screen button (no need to use smartphone buttons) - Have your first beat of a compass as a higher pitch sound   The app is currently monetised through ads, and a PRO version bought through in-app purchase, which enables having more than 3 presets at a time, removes the ads and allows training with complex and compound time signatures. Check it out at https://play.google.com/store/apps/details?id=br.com.dgimenes.metronomepractice</summary></entry><entry><title type="html">Walk Run Interval Training</title><link href="http://localhost:4000/blog/2016/05/19/walk-run-interval-training.html" rel="alternate" type="text/html" title="Walk Run Interval Training" /><published>2016-05-19T00:00:01-03:00</published><updated>2016-05-19T00:00:01-03:00</updated><id>http://localhost:4000/blog/2016/05/19/walk-run-interval-training</id><content type="html" xml:base="http://localhost:4000/blog/2016/05/19/walk-run-interval-training.html">&lt;p&gt;I`ve just released a new app at Google Play store. :)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/app_icon_highres-300x300.png&quot; alt=&quot;app_icon_highres&quot; width=&quot;150&quot; height=&quot;150&quot; class=&quot;aligncenter&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Walk Run&lt;/strong&gt; is focused on helping runners that use &lt;a href=&quot;http://www.runnersworld.com/tag/intervals&quot;&gt;interval training&lt;/a&gt; to improve. The user can configure it's training by setting the duration of each step (warm up, run, walk and cooldown), and the number of cycles Run/Walk he plans to perform. After that, when starting the training, a screen is displayed with the progress of the training, and a custom notification will be available so the user doesn't need to unlock the phone to see in which step he is or how much time is left to end the step. Also, the app makes the smartphone vibrate to inform the user when it is time to start running/walking/etc.&lt;/p&gt;
&lt;p&gt;&lt;img style=&quot;background-color: #333; padding: 20px; width : 243px; height: 320px;&quot; src=&quot;/blog/assets/instructions_drawing-223x300.png&quot; alt=&quot;instructions_drawing&quot; width=&quot;223&quot; height=&quot;300&quot; class=&quot;aligncenter size-medium wp-image-555&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Looks simple, huh? That's the spirit. I've tried to make a user flow which is pretty straight-foward and used distant colors to represent each step, so a that a glance on the notification is enough for the running person to get the info he needs.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/blog/assets/screenshot_1-169x300.png&quot; alt=&quot;screenshot_1&quot; width=&quot;169&quot; height=&quot;300&quot; class=&quot;size-medium wp-image-556&quot; /&gt;&amp;nbsp;&lt;img src=&quot;/blog/assets/screenshot_2-169x300.png&quot; alt=&quot;screenshot_2&quot; width=&quot;169&quot; height=&quot;300&quot; class=&quot;size-medium wp-image-557&quot; /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;The app is available at &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.dgimenes.walkrun&lt;br /&gt;
&quot;&gt;https://play.google.com/store/apps/details?id=br.com.dgimenes.walkrun&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is monetized through ads (Appodeal), and I'm planning on having a &quot;premium&quot; plan (one time in-app purchase) soon. The backlog for the product is big, but as this is not my priority now, it should take a while to see new versions of it after v1.1 (which is planned to go live next week).&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><category term="Android" /><summary type="html">I`ve just released a new app at Google Play store. :) Walk Run is focused on helping runners that use interval training to improve. The user can configure it's training by setting the duration of each step (warm up, run, walk and cooldown), and the number of cycles Run/Walk he plans to perform. After that, when starting the training, a screen is displayed with the progress of the training, and a custom notification will be available so the user doesn't need to unlock the phone to see in which step he is or how much time is left to end the step. Also, the app makes the smartphone vibrate to inform the user when it is time to start running/walking/etc. Looks simple, huh? That's the spirit. I've tried to make a user flow which is pretty straight-foward and used distant colors to represent each step, so a that a glance on the notification is enough for the running person to get the info he needs. &amp;nbsp; The app is available at &quot;&gt;https://play.google.com/store/apps/details?id=br.com.dgimenes.walkrun It is monetized through ads (Appodeal), and I'm planning on having a &quot;premium&quot; plan (one time in-app purchase) soon. The backlog for the product is big, but as this is not my priority now, it should take a while to see new versions of it after v1.1 (which is planned to go live next week).</summary></entry><entry><title type="html">About NasaPic</title><link href="http://localhost:4000/blog/2015/11/14/about-nasapic.html" rel="alternate" type="text/html" title="About NasaPic" /><published>2015-11-14T04:24:31-02:00</published><updated>2015-11-14T04:24:31-02:00</updated><id>http://localhost:4000/blog/2015/11/14/about-nasapic</id><content type="html" xml:base="http://localhost:4000/blog/2015/11/14/about-nasapic.html">&lt;p&gt;When preparing to give a talk about Retrofit (Android lib), the idea of a friend about making a simple app that would load NASA's Astronomy Picture Of The Day (APOD) seemed very good as an example and simple code to open source so the audience could see the library in action. The app was called NasaPic, and from that simple v1, published at Google Play and with it's source available at GitHub, I've developed new features, material design, tested a better internal organization, learned how to use notifications and several other apis. It's been much more fun and interesting as a learning experience than I've imagined.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;/blog/assets/version_comparison.png&quot; alt=&quot;NasaPic Version Comparison&quot; width=&quot;800&quot; height=&quot;600&quot; /&gt;&lt;/p&gt;
&lt;p&gt;At this moment, v3.0 has the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;List of recent APOD released by NASA with picture and some info;&lt;/li&gt;
&lt;li&gt;List of hand-picked great APODs;&lt;/li&gt;
&lt;li&gt;Pan/Zoom APOD in details screen;&lt;/li&gt;
&lt;li&gt;Set APOD as your wallpaper in details screen;&lt;/li&gt;
&lt;li&gt;Configure the app to user the latest APOD as wallpaper every day;&lt;/li&gt;
&lt;li&gt;Undo latest wallpaper change from the app's notification;&lt;/li&gt;
&lt;li&gt;Request for info and images cache;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm not planning on making a real product of it (not even sure if I could, given I'm using a public free api from NASA), but I still have a lot of ideas to make it more useful to users. As long as it is fun and I feel I'm practicing/learning from it, we'll see more versions of it being released.&lt;/p&gt;
&lt;p&gt;Play Store: &lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.dgimenes.nasapic&quot; target=&quot;_blank&quot;&gt;https://play.google.com/store/apps/details?id=br.com.dgimenes.nasapic&lt;/a&gt;&lt;br /&gt;
GitHub: &lt;a href=&quot;https://github.com/danielgimenes/NasaPic&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/NasaPic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;/blog/assets/promo2.png&quot; alt=&quot;NasaPic promo image&quot; width=&quot;704&quot; height=&quot;600&quot; /&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><category term="Android" /><summary type="html">When preparing to give a talk about Retrofit (Android lib), the idea of a friend about making a simple app that would load NASA's Astronomy Picture Of The Day (APOD) seemed very good as an example and simple code to open source so the audience could see the library in action. The app was called NasaPic, and from that simple v1, published at Google Play and with it's source available at GitHub, I've developed new features, material design, tested a better internal organization, learned how to use notifications and several other apis. It's been much more fun and interesting as a learning experience than I've imagined. At this moment, v3.0 has the following features: List of recent APOD released by NASA with picture and some info; List of hand-picked great APODs; Pan/Zoom APOD in details screen; Set APOD as your wallpaper in details screen; Configure the app to user the latest APOD as wallpaper every day; Undo latest wallpaper change from the app's notification; Request for info and images cache; I'm not planning on making a real product of it (not even sure if I could, given I'm using a public free api from NASA), but I still have a lot of ideas to make it more useful to users. As long as it is fun and I feel I'm practicing/learning from it, we'll see more versions of it being released. Play Store: https://play.google.com/store/apps/details?id=br.com.dgimenes.nasapic GitHub: https://github.com/danielgimenes/NasaPic</summary></entry><entry><title type="html">#1 Android Hangout on Air</title><link href="http://localhost:4000/blog/2015/11/07/1-android-hangout-on-air.html" rel="alternate" type="text/html" title="#1 Android Hangout on Air" /><published>2015-11-07T18:34:32-02:00</published><updated>2015-11-07T18:34:32-02:00</updated><id>http://localhost:4000/blog/2015/11/07/1-android-hangout-on-air</id><content type="html" xml:base="http://localhost:4000/blog/2015/11/07/1-android-hangout-on-air.html">&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ab6V53zuJ-s&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><category term="Android" /><summary type="html"></summary></entry><entry><title type="html">GDG-ABC (4 de Julho): Android Libs - Retrofit</title><link href="http://localhost:4000/blog/2015/07/29/gdg-abc-4-de-julho-android-libs-retrofit.html" rel="alternate" type="text/html" title="GDG-ABC (4 de Julho): Android Libs - Retrofit" /><published>2015-07-29T18:50:12-03:00</published><updated>2015-07-29T18:50:12-03:00</updated><id>http://localhost:4000/blog/2015/07/29/gdg-abc-4-de-julho-android-libs-retrofit</id><content type="html" xml:base="http://localhost:4000/blog/2015/07/29/gdg-abc-4-de-julho-android-libs-retrofit.html">&lt;p&gt;Apresentado no 1o Encontro do Grupo de estudos Android do GDG ABC em 4/Jul/2015.&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;//pt.slideshare.net/slideshow/embed_code/key/9ZEqbBxZZtnbgX&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//pt.slideshare.net/danielgimenes/android-libs-retrofit&quot; title=&quot;Android Libs - Retrofit&quot; target=&quot;_blank&quot;&gt;Android Libs - Retrofit&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/danielgimenes&quot; target=&quot;_blank&quot;&gt;Daniel Costa Gimenes&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><category term="Android" /><summary type="html">Apresentado no 1o Encontro do Grupo de estudos Android do GDG ABC em 4/Jul/2015. Android Libs - Retrofit from Daniel Costa Gimenes</summary></entry><entry><title type="html">GDG ABC: Meetup #5</title><link href="http://localhost:4000/blog/2015/02/01/gdg-abc-meetup-5.html" rel="alternate" type="text/html" title="GDG ABC: Meetup #5" /><published>2015-02-01T17:25:19-02:00</published><updated>2015-02-01T17:25:19-02:00</updated><id>http://localhost:4000/blog/2015/02/01/gdg-abc-meetup-5</id><content type="html" xml:base="http://localhost:4000/blog/2015/02/01/gdg-abc-meetup-5.html">&lt;p&gt;Kubernetes, Google Container Engine e um pouquinho de AngularJS. Falei sobre esses assuntos ontem no primeiro encontro do GDG ABC deste ano, e foi bem legal. Fiquei um pouco preocupado com a galera estar acompanhando o assunto de Kubernetes, pois tinham muitos estudantes na platéia, por isso para o evento de Abril planejo fazer uma introdução mais desenvolvida, com o básico melhor apresentado. Mas valeu a experiência e foi bem divertido!&lt;/p&gt;
&lt;p&gt;Segue os slides do que eu apresentei. Caso queira ver todos os slides do evento (incluindo Android Auto), acesse nosso &lt;a title=&quot;Meetup #5 – Tendências e Android Auto&quot; href=&quot;http://www.gdgabc.com.br/meetup-5-tendencias-e-google-auto/&quot; target=&quot;_blank&quot;&gt;post no blog do GDG ABC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/44129249&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//pt.slideshare.net/danielgimenes/tendncias-2015-kubernetes-google-container-engine&quot; title=&quot;Tendências 2015: Kubernetes &amp;amp; Google Container Engine&quot; target=&quot;_blank&quot;&gt;Tendências 2015: Kubernetes &amp;amp; Google Container Engine&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/danielgimenes&quot; target=&quot;_blank&quot;&gt;Daniel Costa Gimenes&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;p&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/44129222&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//pt.slideshare.net/danielgimenes/tendncias-2015-angular-js&quot; title=&quot;Tendências 2015: AngularJS&quot; target=&quot;_blank&quot;&gt;Tendências 2015: AngularJS&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/danielgimenes&quot; target=&quot;_blank&quot;&gt;Daniel Costa Gimenes&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><category term="Android" /><summary type="html">Kubernetes, Google Container Engine e um pouquinho de AngularJS. Falei sobre esses assuntos ontem no primeiro encontro do GDG ABC deste ano, e foi bem legal. Fiquei um pouco preocupado com a galera estar acompanhando o assunto de Kubernetes, pois tinham muitos estudantes na platéia, por isso para o evento de Abril planejo fazer uma introdução mais desenvolvida, com o básico melhor apresentado. Mas valeu a experiência e foi bem divertido! Segue os slides do que eu apresentei. Caso queira ver todos os slides do evento (incluindo Android Auto), acesse nosso post no blog do GDG ABC. Tendências 2015: Kubernetes &amp;amp; Google Container Engine from Daniel Costa Gimenes Tendências 2015: AngularJS from Daniel Costa Gimenes</summary></entry><entry><title type="html">Que 2014 incrível!</title><link href="http://localhost:4000/blog/2014/12/06/que-2014-incrivel.html" rel="alternate" type="text/html" title="Que 2014 incrível!" /><published>2014-12-06T14:14:29-02:00</published><updated>2014-12-06T14:14:29-02:00</updated><id>http://localhost:4000/blog/2014/12/06/que-2014-incrivel</id><content type="html" xml:base="http://localhost:4000/blog/2014/12/06/que-2014-incrivel.html">&lt;p&gt;Mudanças, mudanças, mudanças! Não imaginei por um momento que estaria tão feliz nesse fim de ano... :)&lt;/p&gt;
&lt;p&gt;Fui para a incrível Toronto no meio do ano e fiz ótimos amigos. Voltei para o Brasil e entrei na &lt;a title=&quot;Geekie&quot; href=&quot;http://www.geekie.com.br/&quot; target=&quot;_blank&quot;&gt;Geekie&lt;/a&gt; em Novembro, e a cada dia ficou mais apaixonado pela empresa e pelas pessoas com que trabalho. Acabo de montar um movimento/ONG chamado &lt;a title=&quot;Dia de Alegria&quot; href=&quot;http://www.diadealegria.org/&quot; target=&quot;_blank&quot;&gt;Dia de Alegria&lt;/a&gt; partindo de um &quot;Desafio dos 10 reais&quot; (24h e 10 reais para fazer um projeto). Me tornei um dos organizadores do &lt;a title=&quot;GDG ABC&quot; href=&quot;https://developers.google.com/groups/chapter/108193462895935017410/&quot; target=&quot;_blank&quot;&gt;Google Developer Group ABC&lt;/a&gt; (GDG ABC) e estou empolgadíssimo com os planos do grupo para 2015.&lt;/p&gt;
&lt;p&gt;Muito obrigado a todos! Espero que 2014 tenha sido ótimo para vocês como foi para mim. E que venha 2015! o/&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.geekie.com.br/&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-495&quot; alt=&quot;Geekie&quot; src=&quot;/blog/assets/1_687_3297-300x99.png&quot; width=&quot;300&quot; height=&quot;99&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://developers.google.com/groups/chapter/108193462895935017410/&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-496&quot; alt=&quot;GDG-ABC&quot; src=&quot;/blog/assets/GDG-ABC_Fundo.png&quot; width=&quot;440&quot; height=&quot;248&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;http://www.diadealegria.org/&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-497&quot; alt=&quot;Dia de Alegria&quot; src=&quot;/blog/assets/diadealegria.png&quot; height=&quot;150&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[]'s&lt;br /&gt;
Daniel&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><summary type="html">Mudanças, mudanças, mudanças! Não imaginei por um momento que estaria tão feliz nesse fim de ano... :) Fui para a incrível Toronto no meio do ano e fiz ótimos amigos. Voltei para o Brasil e entrei na Geekie em Novembro, e a cada dia ficou mais apaixonado pela empresa e pelas pessoas com que trabalho. Acabo de montar um movimento/ONG chamado Dia de Alegria partindo de um &quot;Desafio dos 10 reais&quot; (24h e 10 reais para fazer um projeto). Me tornei um dos organizadores do Google Developer Group ABC (GDG ABC) e estou empolgadíssimo com os planos do grupo para 2015. Muito obrigado a todos! Espero que 2014 tenha sido ótimo para vocês como foi para mim. E que venha 2015! o/ []'s Daniel</summary></entry><entry><title type="html">[Java] Some Coding Dojo problems</title><link href="http://localhost:4000/blog/2014/11/01/java-some-coding-dojo-problems.html" rel="alternate" type="text/html" title="[Java] Some Coding Dojo problems" /><published>2014-11-01T20:00:43-02:00</published><updated>2014-11-01T20:00:43-02:00</updated><id>http://localhost:4000/blog/2014/11/01/java-some-coding-dojo-problems</id><content type="html" xml:base="http://localhost:4000/blog/2014/11/01/java-some-coding-dojo-problems.html">&lt;p&gt;I have been solving some exercises commonly done in Coding Dojos to practice some TDD and basic programming logic, and decided to post them on GitHub and here so anyone that is interested can take a look.&lt;/p&gt;
&lt;p&gt;GitHub: &lt;a title=&quot;Coding Dojo Problems GitHub&quot; href=&quot;https://github.com/danielgimenes/CodingDojo&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/CodingDojo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Harry Potter&lt;/h2&gt;
&lt;p&gt;To try and encourage more sales of the 5 different Harry Potter books they sell, a bookshop has decided to offer discounts of multiple-book purchases.&lt;/p&gt;
&lt;p&gt;One copy of any of the five books costs 8 EUR.&lt;/p&gt;
&lt;p&gt;If, however, you buy two different books, you get a 5% discount on those two books.&lt;/p&gt;
&lt;p&gt;If you buy 3 different books, you get a 10% discount.&lt;/p&gt;
&lt;p&gt;If you buy 4 different books, you get a 20% discount.&lt;/p&gt;
&lt;p&gt;If you go the whole hog, and buy all 5, you get a huge 25% discount.&lt;/p&gt;
&lt;p&gt;Note that if you buy, say, four books, of which 3 are different titles, you get a 10% discount on the 3 that form part of a set, but the fourth book still costs 8 EUR.&lt;/p&gt;
&lt;p&gt;Your mission is to write a piece of code to calculate the price of any conceivable shopping basket (containing only Harry Potter books), giving as big a discount as possible.&lt;/p&gt;
&lt;p&gt;For example, how much does this basket of books cost?&lt;/p&gt;
&lt;p&gt;2 copies of the first book 2 copies of the second book 2 copies of the third book 1 copy of the fourth book 1 copy of the fifth book&lt;/p&gt;
&lt;p&gt;One way of group these 8 books is: 1 group of 5 --&amp;gt; 25% discount (1st,2nd,3rd,4th,5th) +1 group of 3 --&amp;gt; 10% discount (1st,2nd,3rd) This would give a total of 5 books at a 25% discount +3 books at a 10% discount Giving 5 x (8 - 2.00) == 5 x 6.00 == 30.00 +3 x (8 - 0.80) == 3 x 7.20 == 21.60 For a total of 51.60&lt;/p&gt;
&lt;p&gt;However, a different way to group these 8 books is: 1 group of 4 books --&amp;gt; 20% discount (1st,2nd,3rd,4th) +1 group of 4 books --&amp;gt; 20% discount (1st,2nd,3rd,5th) This would give a total of 4 books at a 20% discount +4 books at a 20% discount Giving 4 x (8-1.60) == 4 x 6.40 == 25.60 +4 x (8-1.60) == 4 x 6.40 == 25.60 For a total of 51.20&lt;/p&gt;
&lt;p&gt;And 51.20 is the price with the biggest discount.&lt;/p&gt;
&lt;p&gt;Solution: &lt;a title=&quot;HarryPotter Solution at GitHub&quot; href=&quot;https://github.com/danielgimenes/CodingDojo/tree/master/HarryPotter&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/CodingDojo/tree/master/HarryPotter&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/danielgimenes/CodingDojo#tennisscoring&quot; name=&quot;user-content-tennisscoring&quot;&gt;&lt;/a&gt;Tennis Scoring&lt;/h2&gt;
&lt;p&gt;You task is to implement a tennis scoring program. Summary of tennis scoring:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A game is won by the first player to have won at least four points in total and at least two points more than the opponent.&lt;/li&gt;
&lt;li&gt;The running score of each game is described in a manner peculiar to tennis: scores from zero to three points are described as &quot;love&quot;, &quot;fifteen&quot;, &quot;thirty&quot;, and &quot;forty&quot; respectively.&lt;/li&gt;
&lt;li&gt;If at least three points have been scored by each player, and the scores are equal, the score is &quot;deuce&quot;.&lt;/li&gt;
&lt;li&gt;If at least three points have been scored by each side and a player has one more point than his opponent, the score of the game is &quot;advantage&quot; for the player in the lead.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Solution: &lt;a title=&quot;TennisScoring Solution at GitHub&quot; href=&quot;https://github.com/danielgimenes/CodingDojo/tree/master/TennisScoring&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/CodingDojo/tree/master/TennisScoring&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/danielgimenes/CodingDojo#gameoflife&quot; name=&quot;user-content-gameoflife&quot;&gt;&lt;/a&gt;Game Of Life&lt;/h2&gt;
&lt;p&gt;Develop an algorithm that takes &quot;one step&quot; in the game of life. The behaviour examples may simply be the rules of the game:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Any live cell with fewer than two live neighbours dies, as if caused by underpopulation.&lt;/li&gt;
&lt;li&gt;Any live cell with more than three live neighbours dies, as if by overcrowding.&lt;/li&gt;
&lt;li&gt;Any live cell with two or three live neighbours lives on to the next generation.&lt;/li&gt;
&lt;li&gt;Any dead cell with exactly three live neighbours becomes a live cell.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You also have to think of things such as how to represent the board in a test-friendly way, and what &quot;value&quot; cells outside the board has. Or maybe the board does not have borders?&lt;/p&gt;
&lt;p&gt;Solution: &lt;a title=&quot;GameOfLife Solution at GitHub&quot; href=&quot;https://github.com/danielgimenes/CodingDojo/tree/master/GameOfLife&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/CodingDojo/tree/master/GameOfLife&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://github.com/danielgimenes/CodingDojo#fizzbuzz&quot; name=&quot;user-content-fizzbuzz&quot;&gt;&lt;/a&gt;Fizz Buzz&lt;/h2&gt;
&lt;p&gt;For numbers 1 through 100,&lt;/p&gt;
&lt;p&gt;if the number is divisible by 3 print Fizz; if the number is divisible by 5 print Buzz; if the number is divisible by 3 and 5 (15) print FizzBuzz; else, print the number.&lt;/p&gt;
&lt;p&gt;Solution: &lt;a title=&quot;FizzBuzz Solution at GitHub&quot; href=&quot;https://github.com/danielgimenes/CodingDojo/tree/master/FizzBuzz&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/CodingDojo/tree/master/FizzBuzz&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;SQL String Generator&lt;/h2&gt;
&lt;p&gt;Given table metadata (name, columns/types, etc.), generate a well-formed SQL string. For example:&lt;/p&gt;
&lt;p&gt;String[] columns = { &quot;a&quot;, &quot;b&quot;, &quot;c&quot; };&lt;br /&gt;
assertEquals(&quot;select a,b,c from x&quot;, sql.select(tableName, columns));&lt;/p&gt;
&lt;p&gt;Do this for the usual SQL queries: SELECT, INSERT, UPDATE, DELETE. Remember to only do one thing at a time, and try not to think of the solution &quot;ahead of time&quot;. Let the methods and objects just grow by themselves, as you write more and more tests.&lt;/p&gt;
&lt;p&gt;Solution: &lt;a title=&quot;SQL String Generator Solution at GitHub&quot; href=&quot;https://github.com/danielgimenes/CodingDojo/tree/master/SQLStringGenerator&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/CodingDojo/tree/master/SQLStringGenerator&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Postfix Form&lt;/h2&gt;
&lt;p&gt;Given an expression in infix form (operators appear inline in the expression) like:&lt;/p&gt;
&lt;p&gt;3 * (2 + 5)&lt;/p&gt;
&lt;p&gt;Transform it to its postfix equivalent:&lt;/p&gt;
&lt;p&gt;3 2 5 + *&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;p&gt;Infix: 3 * (2 + 5)&lt;br /&gt;
Postfix: 3 2 5 + *&lt;/p&gt;
&lt;p&gt;Infix: ((2 + 3) / 4) + (3 + 1) * 4&lt;br /&gt;
Postfix: 2 3 + 4 / 3 1 + 4 * +&lt;/p&gt;
&lt;p&gt;Solution: &lt;a title=&quot;PostFix Solution at GitHub&quot; href=&quot;https://github.com/danielgimenes/CodingDojo/tree/master/PostfixForm&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/CodingDojo/tree/master/PostfixForm&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><category term="Java" /><summary type="html">I have been solving some exercises commonly done in Coding Dojos to practice some TDD and basic programming logic, and decided to post them on GitHub and here so anyone that is interested can take a look. GitHub: https://github.com/danielgimenes/CodingDojo Harry Potter To try and encourage more sales of the 5 different Harry Potter books they sell, a bookshop has decided to offer discounts of multiple-book purchases. One copy of any of the five books costs 8 EUR. If, however, you buy two different books, you get a 5% discount on those two books. If you buy 3 different books, you get a 10% discount. If you buy 4 different books, you get a 20% discount. If you go the whole hog, and buy all 5, you get a huge 25% discount. Note that if you buy, say, four books, of which 3 are different titles, you get a 10% discount on the 3 that form part of a set, but the fourth book still costs 8 EUR. Your mission is to write a piece of code to calculate the price of any conceivable shopping basket (containing only Harry Potter books), giving as big a discount as possible. For example, how much does this basket of books cost? 2 copies of the first book 2 copies of the second book 2 copies of the third book 1 copy of the fourth book 1 copy of the fifth book One way of group these 8 books is: 1 group of 5 --&amp;gt; 25% discount (1st,2nd,3rd,4th,5th) +1 group of 3 --&amp;gt; 10% discount (1st,2nd,3rd) This would give a total of 5 books at a 25% discount +3 books at a 10% discount Giving 5 x (8 - 2.00) == 5 x 6.00 == 30.00 +3 x (8 - 0.80) == 3 x 7.20 == 21.60 For a total of 51.60 However, a different way to group these 8 books is: 1 group of 4 books --&amp;gt; 20% discount (1st,2nd,3rd,4th) +1 group of 4 books --&amp;gt; 20% discount (1st,2nd,3rd,5th) This would give a total of 4 books at a 20% discount +4 books at a 20% discount Giving 4 x (8-1.60) == 4 x 6.40 == 25.60 +4 x (8-1.60) == 4 x 6.40 == 25.60 For a total of 51.20 And 51.20 is the price with the biggest discount. Solution: https://github.com/danielgimenes/CodingDojo/tree/master/HarryPotter Tennis Scoring You task is to implement a tennis scoring program. Summary of tennis scoring: A game is won by the first player to have won at least four points in total and at least two points more than the opponent. The running score of each game is described in a manner peculiar to tennis: scores from zero to three points are described as &quot;love&quot;, &quot;fifteen&quot;, &quot;thirty&quot;, and &quot;forty&quot; respectively. If at least three points have been scored by each player, and the scores are equal, the score is &quot;deuce&quot;. If at least three points have been scored by each side and a player has one more point than his opponent, the score of the game is &quot;advantage&quot; for the player in the lead. Solution: https://github.com/danielgimenes/CodingDojo/tree/master/TennisScoring Game Of Life Develop an algorithm that takes &quot;one step&quot; in the game of life. The behaviour examples may simply be the rules of the game: Any live cell with fewer than two live neighbours dies, as if caused by underpopulation. Any live cell with more than three live neighbours dies, as if by overcrowding. Any live cell with two or three live neighbours lives on to the next generation. Any dead cell with exactly three live neighbours becomes a live cell. You also have to think of things such as how to represent the board in a test-friendly way, and what &quot;value&quot; cells outside the board has. Or maybe the board does not have borders? Solution: https://github.com/danielgimenes/CodingDojo/tree/master/GameOfLife Fizz Buzz For numbers 1 through 100, if the number is divisible by 3 print Fizz; if the number is divisible by 5 print Buzz; if the number is divisible by 3 and 5 (15) print FizzBuzz; else, print the number. Solution: https://github.com/danielgimenes/CodingDojo/tree/master/FizzBuzz SQL String Generator Given table metadata (name, columns/types, etc.), generate a well-formed SQL string. For example: String[] columns = { &quot;a&quot;, &quot;b&quot;, &quot;c&quot; }; assertEquals(&quot;select a,b,c from x&quot;, sql.select(tableName, columns)); Do this for the usual SQL queries: SELECT, INSERT, UPDATE, DELETE. Remember to only do one thing at a time, and try not to think of the solution &quot;ahead of time&quot;. Let the methods and objects just grow by themselves, as you write more and more tests. Solution: https://github.com/danielgimenes/CodingDojo/tree/master/SQLStringGenerator Postfix Form Given an expression in infix form (operators appear inline in the expression) like: 3 * (2 + 5) Transform it to its postfix equivalent: 3 2 5 + * Examples: Infix: 3 * (2 + 5) Postfix: 3 2 5 + * Infix: ((2 + 3) / 4) + (3 + 1) * 4 Postfix: 2 3 + 4 / 3 1 + 4 * + Solution: https://github.com/danielgimenes/CodingDojo/tree/master/PostfixForm</summary></entry><entry><title type="html">#SmashBros Twitter Analytics</title><link href="http://localhost:4000/blog/2014/10/03/smashbros-twitter-analytics.html" rel="alternate" type="text/html" title="#SmashBros Twitter Analytics" /><published>2014-10-03T07:23:14-03:00</published><updated>2014-10-03T07:23:14-03:00</updated><id>http://localhost:4000/blog/2014/10/03/smashbros-twitter-analytics</id><content type="html" xml:base="http://localhost:4000/blog/2014/10/03/smashbros-twitter-analytics.html">&lt;p&gt;October 3rd was the release date of Super Smash Bros for 3DS - Nintendo’s newest game for its portable video-game console. Knowing this and wanting to practice some programming I decided to create a little pet project. &quot;#SmashBros Twitter Analytics&quot; is composed of two softwares: a service to capture and process Twitter data related to the game, and a website to show some interesting information about the tweets. Both were developed in Java platforms and had their code published on GitHub (&lt;a title=&quot;#SmashBros Twitter Analytics CODE&quot; href=&quot;https://github.com/danielgimenes/SmashBrosTwitterAnalytics&quot; target=&quot;_blank&quot;&gt;https://github.com/danielgimenes/SmashBrosTwitterAnalytics&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The website is (for now) hosted on Amazon Web Services, and can be visited through the link: &lt;a title=&quot;#SmashBros Twitter Analytics&quot; href=&quot;http://54.69.148.65/SmashBrosTwitterAnalytics/&quot; target=&quot;_blank&quot;&gt;http://54.69.148.65/SmashBrosTwitterAnalytics/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;http://www.dgimenes.com/blog/wp-content/uploads/2014/10/smashbrostwitteranalytics_v1.png&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-472&quot; alt=&quot;smashbrostwitteranalytics_v1&quot; src=&quot;/blog/assets/smashbrostwitteranalytics_v1-1024x762.png&quot; width=&quot;440&quot; height=&quot;327&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;http://www.dgimenes.com/blog/wp-content/uploads/2014/10/smash2.png&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-474&quot; alt=&quot;smash2&quot; src=&quot;/blog/assets/smash2-1024x595.png&quot; width=&quot;440&quot; height=&quot;255&quot; /&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;Libraries and Frameworks&lt;/h2&gt;
&lt;p&gt;SmashBrosTwitterStreamProcessor (service):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java SE&lt;/li&gt;
&lt;li&gt;Twitter4J&lt;/li&gt;
&lt;li&gt;PostgreSQL JDBC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SmashBrosTwitterAnalytics (website):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java EE 7
&lt;ul&gt;
&lt;li&gt;JSF&lt;/li&gt;
&lt;li&gt;JPA&lt;/li&gt;
&lt;li&gt;EJB&lt;/li&gt;
&lt;li&gt;Filters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Glassfish&lt;/li&gt;
&lt;li&gt;PrimeFaces&lt;/li&gt;
&lt;li&gt;PostgreSQL JDBC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Rules for Capturing and Processing&lt;/h2&gt;
&lt;p&gt;The tweets captured were only the ones with the hashtag #SmashBros in it. This was configured on the Twitter Streaming query with Twitter4J.&lt;/p&gt;
&lt;h2&gt;Information Generated&lt;/h2&gt;
&lt;p&gt;The service processed every tweet and stored it on the relational database. This processing was designed to produce a rank of characters by references (of them on tweets) and a word count for every word in the tweets, excluding words from a list. That list included common english words (pronouns, etc) and words that wouldn't be interesting to analyse (like &quot;Smash&quot; for obvious reasons). The list can be found on the link: http://goo.gl/Y9fC2c&lt;/p&gt;
&lt;p&gt;Also, the website displays the number of tweets captured since it was published, and the number of tweets grouped by hour and day on the last hours and days.&lt;/p&gt;</content><author><name>{&quot;login&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;email&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;display_name&quot;=&gt;&quot;danielcgimenes@gmail.com&quot;, &quot;first_name&quot;=&gt;&quot;&quot;, &quot;last_name&quot;=&gt;&quot;&quot;}</name><email>danielcgimenes@gmail.com</email></author><category term="PetProject" /><summary type="html">October 3rd was the release date of Super Smash Bros for 3DS - Nintendo’s newest game for its portable video-game console. Knowing this and wanting to practice some programming I decided to create a little pet project. &quot;#SmashBros Twitter Analytics&quot; is composed of two softwares: a service to capture and process Twitter data related to the game, and a website to show some interesting information about the tweets. Both were developed in Java platforms and had their code published on GitHub (https://github.com/danielgimenes/SmashBrosTwitterAnalytics). The website is (for now) hosted on Amazon Web Services, and can be visited through the link: http://54.69.148.65/SmashBrosTwitterAnalytics/ Libraries and Frameworks SmashBrosTwitterStreamProcessor (service): Java SE Twitter4J PostgreSQL JDBC SmashBrosTwitterAnalytics (website): Java EE 7 JSF JPA EJB Filters Glassfish PrimeFaces PostgreSQL JDBC Rules for Capturing and Processing The tweets captured were only the ones with the hashtag #SmashBros in it. This was configured on the Twitter Streaming query with Twitter4J. Information Generated The service processed every tweet and stored it on the relational database. This processing was designed to produce a rank of characters by references (of them on tweets) and a word count for every word in the tweets, excluding words from a list. That list included common english words (pronouns, etc) and words that wouldn't be interesting to analyse (like &quot;Smash&quot; for obvious reasons). The list can be found on the link: http://goo.gl/Y9fC2c Also, the website displays the number of tweets captured since it was published, and the number of tweets grouped by hour and day on the last hours and days.</summary></entry></feed>